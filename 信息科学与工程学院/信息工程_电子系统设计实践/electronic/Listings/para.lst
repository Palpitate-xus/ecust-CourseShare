C51 COMPILER V9.54   PARA                                                                  07/03/2023 13:24:40 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE PARA
OBJECT MODULE PLACED IN .\Objects\para.obj
COMPILER INVOKED BY: E:\ele\keil\C51\BIN\C51.EXE para.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\para.lst) OBJECT(.\Objects\para.obj)

line level    source

   1          #include <para.h>
   2          
   3          unsigned char para_motorTestMode = 0;
   4          unsigned char para_tempModify = 0;
   5          unsigned char keyTime;
   6          unsigned char isChanging=0;
   7          void paraMenu(void)
   8          { 
   9   1          if(paraMode == 0)
  10   1          {
  11   2              LED[0] = LED_NULL;
  12   2              LED[1] = LED_r;
  13   2              LED[2] = LED_u;
  14   2              LED[3] = LED_n;
  15   2          }
  16   1          else if(paraMode == 1)
  17   1          {
  18   2              LED[0] = LED_NULL;
  19   2              LED[1] = LED_C;
  20   2              LED[2] = LED_o;
  21   2              LED[3] = LED_n;
  22   2          }
  23   1          
  24   1          LED[4] = LED_P;
  25   1          LED[5] = LED_A;
  26   1          LED[6] = LED_LINE;
  27   1          LED[7] = LED_NULL;
  28   1      }
  29          
  30          void para_motorTest(void)
  31          {
  32   1          static unsigned char dutyRation=0;
  33   1          static unsigned char steps;
  34   1          
  35   1          if(!isChanging)     dutyRation = readByte_ee(para_motorTestMode);
  36   1          
  37   1          if(key == 0xff)
  38   1          {
  39   2              keyTime = 0;
  40   2              steps = 1;
  41   2              return;
  42   2          }
  43   1          else
  44   1          {
  45   2              keyTime++;
  46   2              
  47   2              if(keyTime == 1)
  48   2              {
  49   3                  if(!isChanging)
  50   3                  {
  51   4                      switch(key)
  52   4                      {
  53   5                          case BUTTON_DOWN:
  54   5                              para_motorTestMode = (para_motorTestMode + (10 - steps)) % 10;             
C51 COMPILER V9.54   PARA                                                                  07/03/2023 13:24:40 PAGE 2   

  55   5                              break;
  56   5                          case BUTTON_UP:
  57   5                              para_motorTestMode = (para_motorTestMode + steps) % 10;
  58   5                              break;
  59   5                          case BUTTON_ENTER:
  60   5                              isChanging = 1;
  61   5                              break;
  62   5                          case BUTTON_LEFT:
  63   5                              MenuID = MENU_PARA_SET;
  64   5                              break;
  65   5                      }
  66   4                  }
  67   3                  else
  68   3                  {
  69   4                      switch(key)
  70   4                      {
  71   5                          case BUTTON_DOWN:
  72   5                              dutyRation = (dutyRation + (100 - steps)) % 101;             
  73   5                              break;
  74   5                          case BUTTON_UP:
  75   5                              dutyRation = (dutyRation + steps) % 101;
  76   5                              break;
  77   5                          case BUTTON_ENTER:
  78   5                              writeByte_ee(dutyRation,para_motorTestMode);
  79   5                              isChanging = 0;
  80   5                              break;
  81   5                          case BUTTON_LEFT:
  82   5                              isChanging = 0;
  83   5                              break;
  84   5                      }
  85   4                  }
  86   3              }
  87   2              else if(keyTime > 30)
  88   2              {
  89   3                  keyTime = 0;
  90   3                  steps = 1.5 * steps + 1;
  91   3                  steps = steps > 10 ? 10 : steps;
  92   3              }
  93   2          }
  94   1             
  95   1          {
  96   2              LED[0] = LED_NULL;
  97   2              LED[1] = Number[dutyRation / 100];
  98   2              LED[2] = Number[(dutyRation % 100) / 10];
  99   2              LED[3] = Number[dutyRation % 10];
 100   2              if(!isChanging) LED[4] = LED_P;
 101   2              else LED[4] = LED_A;
 102   2              LED[5] = LED_LINE;
 103   2              LED[6] = Number[(para_motorTestMode + 1) / 10];
 104   2              LED[7] = Number[(para_motorTestMode + 1) % 10];
 105   2          } 
 106   1      }
 107          
 108          void para_tempModift(void)
 109          {
 110   1          static unsigned char temp=0;
 111   1          static unsigned char steps;
 112   1          
 113   1          if(!isChanging)     temp = readByte_ee(10 + para_tempModify);
 114   1          
 115   1          if(key == 0xff)
 116   1          {
C51 COMPILER V9.54   PARA                                                                  07/03/2023 13:24:40 PAGE 3   

 117   2              keyTime = 0;
 118   2              steps = 1;
 119   2              return;
 120   2          }
 121   1          else
 122   1          {
 123   2              keyTime++;
 124   2              
 125   2              if(keyTime == 1)
 126   2              {
 127   3                  if(!isChanging)
 128   3                  {
 129   4                      switch(key)
 130   4                      {
 131   5                          case BUTTON_DOWN:
 132   5                              para_tempModify = (para_tempModify + 1) % 2;             
 133   5                              break;
 134   5                          case BUTTON_UP:
 135   5                              para_tempModify = (para_tempModify + 1) % 2;
 136   5                              break;
 137   5                          case BUTTON_ENTER:
 138   5                              isChanging = 1;
 139   5                              break;
 140   5                          case BUTTON_LEFT:
 141   5                              MenuID = MENU_PARA_SET;
 142   5                              break;
 143   5                      }
 144   4                  }
 145   3                  else
 146   3                  {
 147   4                      switch(key)
 148   4                      {
 149   5                          case BUTTON_DOWN:
 150   5                              temp = (temp - steps) > 10 ? (temp - steps) : 10;
 151   5                              break;
 152   5                          case BUTTON_UP:
 153   5                              temp = (temp + steps) < 70 ? (temp + steps) : 70;
 154   5                              break;
 155   5                          case BUTTON_ENTER:
 156   5                              writeByte_ee(temp,10 + para_tempModify);
 157   5                              tempMin = readByte_ee(10);
 158   5                              tempMax = readByte_ee(11);
 159   5                              isChanging = 0;
 160   5                              break;
 161   5                          case BUTTON_LEFT:
 162   5                              isChanging = 0;
 163   5                              break;
 164   5                      }
 165   4                  }
 166   3              }
 167   2              else if(keyTime > 30)
 168   2              {
 169   3                  keyTime = 0;
 170   3                  steps = 1.5 * steps + 1;
 171   3                  steps = steps > 5 ? 5 : steps;
 172   3              }
 173   2          }
 174   1          
 175   1          {
 176   2              LED[0] = Number[(temp / 10) % 10];
 177   2              LED[1] = Number[temp % 10];
 178   2              LED[2] = LED_o;
C51 COMPILER V9.54   PARA                                                                  07/03/2023 13:24:40 PAGE 4   

 179   2              LED[3] = LED_C;
 180   2              LED[4] = LED_t;
 181   2              LED[5] = LED_LINE;
 182   2              LED[6] = LED_LINE;
 183   2              if(para_tempModify) LED[7] = LED_H;
 184   2              else LED[7] = LED_L;
 185   2          }
 186   1          
 187   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    910    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
