C51 COMPILER V9.54   PID                                                                   07/03/2023 16:59:46 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE PID
OBJECT MODULE PLACED IN .\Objects\pid.obj
COMPILER INVOKED BY: E:\ele\keil\C51\BIN\C51.EXE pid.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\pid.lst) OBJECT(.\Objects\pid.obj)

line level    source

   1          #include <pid.h>
   2          
   3          extern int Speed;
   4          extern float temp_now;
   5          float temp_set;
   6          char pidMenuMode=0;
   7          
   8          
   9          void modifyPassword(unsigned short password)
  10          {
  11   1          unsigned char lowPassword,highPassword;
  12   1          unsigned char low,high;
  13   1          lowPassword  =  readByte_ee(12);
  14   1          highPassword =  readByte_ee(13);
  15   1          
  16   1          low = password;
  17   1          high = password >> 8;
  18   1          
  19   1          
  20   1          if(lowPassword == (unsigned char)password && highPassword == (unsigned char)(password >> 8))
  21   1          {
  22   2              pidMenuMode = 1;
  23   2              temp_set = readByte_ee(10);
  24   2          }
  25   1          else 
  26   1          {
  27   2              pidMenuMode = -1;
  28   2          }
  29   1      }
  30          
  31          void pidControl(float tempNow, float tempSet)
  32          {
  33   1          static float e_1=0.,e_2=0.,e=0.;
  34   1          static float kp=4.0,ki=0.07,kd=0.9;
  35   1          float A,B,C,speedDelta;
  36   1          
  37   1          e_2 = e_1;
  38   1          e_1 = e;
  39   1          e = tempNow - tempSet;
  40   1          
  41   1          A = kp * (1 + ki + kd);
  42   1          B = - kp * (1 + 2 * kd);
  43   1          C = kp * kd;
  44   1          speedDelta = (A * e + B * e_1 + C * e_2);
  45   1          
  46   1          if(speedDelta < 0.2)
  47   1              speedDelta--;
  48   1          if(speedDelta > 0.5)
  49   1              speedDelta++;
  50   1          
  51   1          Speed = Speed + speedDelta;
  52   1          
  53   1          if(Speed > 100) Speed = 100;
  54   1          if(Speed< 0) Speed = 0;
C51 COMPILER V9.54   PID                                                                   07/03/2023 16:59:46 PAGE 2   

  55   1          
  56   1          LED[4] = LED_NULL;
  57   1          LED[5] = Number[Speed / 100];
  58   1          LED[6] = Number[(Speed / 10) % 10];
  59   1          LED[7] = Number[Speed % 10];
  60   1          delay(10000);
  61   1      }
  62          
  63          void temp_pid()
  64          {
  65   1          static unsigned short inputPassword=0;
  66   1          static unsigned char keyTime;
  67   1          static unsigned char steps;
  68   1          
  69   1          
  70   1          if(key == 0xff)
  71   1          {
  72   2              keyTime = 0;
  73   2              steps = 1;
  74   2          }
  75   1          else
  76   1          {
  77   2              keyTime++;
  78   2              
  79   2              if(keyTime == 1)
  80   2              {
  81   3                  if(pidMenuMode == 0)
  82   3                  {
  83   4                      switch(key)
  84   4                      {
  85   5                          case BUTTON_DOWN:
  86   5                              inputPassword = (inputPassword + (10000 - steps)) % 10000;             
  87   5                              break;
  88   5                          case BUTTON_UP:
  89   5                              inputPassword = (inputPassword + steps) % 10000;
  90   5                              break;
  91   5                          case BUTTON_ENTER:
  92   5                              if(lastKey != key)  modifyPassword(inputPassword);
  93   5                              break;
  94   5                          case BUTTON_LEFT:
  95   5                              MenuID = MUNU_MAIN_PID;
  96   5                              break;
  97   5                      }
  98   4                  }
  99   3                  
 100   3                  else if(pidMenuMode == -1)
 101   3                  {
 102   4                      if(lastKey != key)
 103   4                      {
 104   5                          switch(key)
 105   5                          {
 106   6                              case BUTTON_ENTER:
 107   6                              case BUTTON_LEFT:
 108   6                                  pidMenuMode = 0;
 109   6                                  EA = 0;
 110   6                                  break;
 111   6                          }
 112   5                      }
 113   4                  }
 114   3                  
 115   3                  else if(pidMenuMode == 1)
 116   3                  {
C51 COMPILER V9.54   PID                                                                   07/03/2023 16:59:46 PAGE 3   

 117   4                      switch(key)
 118   4                      {
 119   5                          case BUTTON_LEFT:
 120   5                              pidMenuMode = 0;
 121   5                              EA = 0;
 122   5                              break;
 123   5                      }
 124   4                  }
 125   3              }
 126   2              else if(keyTime > 30)
 127   2              {
 128   3                  keyTime = 0;
 129   3                  steps = 2. * steps + 1;
 130   3                  steps = steps > 500 ? 500 : steps;
 131   3              }
 132   2          }
 133   1          
 134   1          if(pidMenuMode == 0)
 135   1          {
 136   2              LED[0] = Number[inputPassword / 1000];
 137   2              LED[1] = Number[(inputPassword / 100) % 10];
 138   2              LED[2] = Number[(inputPassword / 10) % 10];
 139   2              LED[3] = Number[inputPassword % 10];
 140   2              LED[4] = LED_P;
 141   2              LED[5] = LED_LINE;
 142   2              LED[6] = LED_LINE;
 143   2              LED[7] = LED_LINE;
 144   2          }
 145   1          else if(pidMenuMode == -1) 
 146   1          {
 147   2              LED[0] = LED_8 + LED_DOT;
 148   2              LED[1] = LED_8 + LED_DOT;
 149   2              LED[2] = LED_8 + LED_DOT;
 150   2              LED[3] = LED_8 + LED_DOT;
 151   2              LED[4] = LED_E;
 152   2              LED[5] = LED_r;
 153   2              LED[6] = LED_r + LED_DOT;
 154   2              LED[7] = LED_NULL;
 155   2          }
 156   1          else if(pidMenuMode == 1)
 157   1          {
 158   2              EA = 1;
 159   2              temp_now = showTemperature();
 160   2              
 161   2              pidControl(temp_now, temp_set);
 162   2          }
 163   1          
 164   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1288    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     33      29
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
