C51 COMPILER V9.54   EE24C16                                                               07/04/2023 09:49:57 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE EE24C16
OBJECT MODULE PLACED IN .\Objects\ee24c16.obj
COMPILER INVOKED BY: E:\ele\keil\C51\BIN\C51.EXE ee24c16.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\ee24c16.lst) OBJECT(.\Objects\ee24c16.obj)

line level    source

   1          #include <REG52.H>
   2          #include <stdio.h>
   3          #include <math.h>
   4          #include <stdlib.h>
   5          #include <intrins.h>
   6          #include <hd7279a.h>
   7          #include <common.h>
   8          #include <ee24c16.h>
   9          #include <ds18b20.h>
  10          #include <util.h>
  11           
  12          void init_ee24c16(void)
  13          {
  14   1              SDA=1;
  15   1              SCL=1;
  16   1      }
  17           
  18           
  19          void I2C_start(void)
  20          {
  21   1              
  22   1              SDA=1;
  23   1              delay(5);
  24   1              SCL=1;
  25   1              delay(5);
  26   1              SDA=0;
  27   1              delay(5);
  28   1      }
  29           
  30          void I2C_stop(void)
  31          {
  32   1              SDA=0;
  33   1              delay(5);
  34   1              SCL=1;
  35   1              delay(5);
  36   1              SDA=1;
  37   1              delay(5);
  38   1      }
  39           
  40          void I2C_ack(void)
  41          {
  42   1              unsigned char i;
  43   1              SCL=1;
  44   1              delay(5);
  45   1              while( (SDA==1) && (i<200) )  i++;
  46   1              SCL=0;
  47   1              delay(5);
  48   1      }
  49           
  50          void I2C_noack()
  51          {
  52   1              SDA = 1;
  53   1              delay(5);
  54   1              SCL = 1;
C51 COMPILER V9.54   EE24C16                                                               07/04/2023 09:49:57 PAGE 2   

  55   1              delay(5);
  56   1              SCL = 0;
  57   1              delay(5);
  58   1      }
  59          
  60          void writeByte_I2C(unsigned char input)
  61          {
  62   1              unsigned char i;
  63   1              SCL = 0;
  64   1              for(i=0;i<8;i++){
  65   2                      if( input & 0x80 )  
  66   2                  SDA = 1;
  67   2                      else 
  68   2                  SDA = 0;
  69   2              
  70   2                      input = input<<1;
  71   2                      delay(5);
  72   2                      SCL = 1;
  73   2                      delay(5);
  74   2                      SCL = 0;
  75   2                      delay(5);
  76   2              }
  77   1              SDA = 1;
  78   1              delay(5);
  79   1      }
  80           
  81          unsigned char readByte_I2C(void)
  82          {
  83   1              unsigned char i,rbyte;
  84   1              SCL = 0;
  85   1              delay(5);
  86   1              SDA = 1;
  87   1              delay(5);
  88   1              for(i = 0;i<8;++i){
  89   2                      SCL = 1;
  90   2                      delay(5);
  91   2                      rbyte = rbyte<<1;
  92   2                      if(SDA) 
  93   2                  rbyte++;
  94   2                      SCL = 0;
  95   2                      delay(5);
  96   2              }
  97   1              return rbyte;
  98   1      }
  99           
 100          void writeByte_ee(unsigned char dat,unsigned char addr)
 101          {
 102   1              init_ee24c16();
 103   1              I2C_start();
 104   1              writeByte_I2C(EE24C16_WRITE_ADDRESS);
 105   1              I2C_ack();
 106   1              writeByte_I2C(addr);
 107   1              I2C_ack();
 108   1              writeByte_I2C(dat);
 109   1              I2C_ack();
 110   1              I2C_stop();
 111   1      }
 112           
 113          unsigned char readByte_ee(unsigned char addr)
 114          {
 115   1              unsigned char output;
 116   1              init_ee24c16();
C51 COMPILER V9.54   EE24C16                                                               07/04/2023 09:49:57 PAGE 3   

 117   1              I2C_start();
 118   1              writeByte_I2C(EE24C16_WRITE_ADDRESS);
 119   1              I2C_ack();
 120   1              writeByte_I2C(addr);
 121   1              I2C_ack();
 122   1              I2C_start();
 123   1              writeByte_I2C(EE24C16_READ_ADDRESS);
 124   1              I2C_ack();
 125   1              output = readByte_I2C();
 126   1              I2C_noack();
 127   1              I2C_stop();
 128   1              return output;
 129   1      }
 130           
 131          void init_ee24c16_default(void){
 132   1              //只调用一次
 133   1              delay(150);
 134   1              writeByte_ee(10,0);
 135   1              delay(150);
 136   1              writeByte_ee(20,1);
 137   1              delay(150);
 138   1              writeByte_ee(30,2);
 139   1              delay(150);
 140   1              writeByte_ee(40,3);
 141   1              delay(150);
 142   1              writeByte_ee(50,4);
 143   1              delay(150);
 144   1              writeByte_ee(60,5);
 145   1              delay(150);
 146   1              writeByte_ee(70,6);
 147   1              delay(150);
 148   1              writeByte_ee(80,7);
 149   1              delay(150);
 150   1              writeByte_ee(90,8);
 151   1              delay(150);
 152   1              writeByte_ee(100,9);
 153   1              delay(150);
 154   1              writeByte_ee(28,10);//t_low
 155   1              delay(150);
 156   1              writeByte_ee(32,11);//t_high
 157   1              delay(150);
 158   1          
 159   1          writeByte_ee(0x0f,12); //low
 160   1          delay(150);
 161   1          writeByte_ee(0x27,13); //high
 162   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    574    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
